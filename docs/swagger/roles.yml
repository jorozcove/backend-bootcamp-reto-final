/api/v1/rol/create:
  post:
    tags:
      - Roles
    description: Crear rol
    produces:
      - application/json
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Nombre del rol
          example:
            {
              "name": "string"
            }
    responses:
      200:
        description: Petición exitosa
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": true,
                "message": "role creado exitosamente"
              }
      401:
        description: No autorizado
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/User'
            example:
              {
                "state": false,
                "message": "Falta el token de autorización"
              }
      500:
        description: Error en el servidor
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": false,
                "message": "Error al crear el rol"
              }

/api/v1/rol/getRoles:
  get:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: Listar roles
    produces:
      - application/json
    responses:
      200:
        description: Petición exitosa
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": true,
                "roles": [
                  {
                    "id": 1,
                    "name": "admin"
                  },
                  {
                    "id": 2,
                    "name": "user"
                  }
                ],
                "message": "Listado de roles"
              }
      401:
        description: No autorizado
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/User'
            example:
              {
                "state": false,
                "message": "Falta el token de autorización"
              }
      500:
        description: Error en el servidor
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": false,
                "message": "Error al listar roles"
              }

/api/v1/rol/updateRol/{id_role}:
  put:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: Editar rol
    produces:
      - application/json
    parameters:
      - in: path
        name: id_role
        schema:
          type: integer
        required: true
        description: ID del rol
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Nombre del rol
          example:
            {
              "name": "string"
            }
    responses:
      200:
        description: Petición exitosa
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": true,
                "message": "Rol editado con exito"
              }
      401:
        description: No autorizado
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/User'
            example:
              {
                "state": false,
                "message": "Falta el token de autorización"
              }
      500:
        description: Error en el servidor
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": false,
                "message": "Error al actualizar Rol"
              }

/api/v1/rol/deleteRol/{id_role}:
  delete:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: Eliminar rol
    produces:
      - application/json
    parameters:
      - in: path
        name: id_role
        schema:
          type: integer
        required: true
        description: ID del rol
    responses:
      200:
        description: Petición exitosa
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": true,
                "message": "Rol eliminado con exito"
              }
      401:
        description: No autorizado
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/User'
            example:
              {
                "state": false,
                "message": "Falta el token de autorización"
              }
      500:
        description: Error en el servidor
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/definitions/Role'
            example:
              {
                "state": false,
                "message": "Error al eliminar Rol"
              }
